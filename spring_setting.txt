Spring 설치 후 기본 Setting

1. 페이지 Setting

1. Windows -> Preferences -> Encoding 입력 
(1) General 
   1) Content Types -> Java Class File과 Text(두 군데) -> Default encoding에 UTF-8넣기 -> Update
   2)Workspace -> Text file encoding(왼쪽 아래부분) -> Other -> UTF-8, 
	       ->  New text file line delimiter(오른쪽 아래부분) -> Other -> Unix -> Apply
(2) Web
  1) CSS Files, HTML Files, JSP Files (세개 모두) -> Encoding -> ISO 10646/Unicode(UTF-8) 선택 -> Apply

2. (선택)글자크기 조정
Windows -> Preferences -> General -> Appearance -> Colors and Fonts 
 -> Basic -> Text Font -> Edit 에서 글꼴 자유롭게 수정

3. (선택)서버 실행 시 구현되는 페이지 선택
Windows -> Web Browser 에서 선택

4. Windows -> Preferences -> Web -> JSP File -> Editor ->Templates 
  ->Name에서 New JSP File (html)-> Edit
   1) Name: New JSP File (html5)로 수정
   2) Descriptrion: JSP with html5 markup로 수정
   3) pattern:
<%@ page language="java" contentType="text/html; charset=${encoding}"
    pageEncoding="${encoding}"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=${encoding}">
<title>Insert title here</title>
</head>
<body>
${cursor}
</body>
</html> 수정

5. (선택) Java-> Code Style -> Code Templates -> Code 
 1) New Java files -> edit ->Pattern
${filecomment}
${package_declaration}

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

${typecomment}
${type_declaration} 수정

 2) Class Body ->Edit 
private static final Logger log = LoggerFactory.getLogger(여기 마우스 놓고.class);----> insert Variable...-> type_name 누르고 -> apply

6.(선택이지만 하면 간편) Window -> Perspective-> Customize Perspective -> Shortcuts ( 1)~5) 부분만 체크)
 1) General -> File, Folder, Untitled Text File
 2) Java -> class, Interface, Java Project, Package, Source Folder
 3) Spring -> Spring Legacy Project
 4) Web -> JSP File
 5) XML -> XML File 
===================================================================================================
7. 버전 변경
 : Spring Legacy Project 생성 후, 프로젝트 오른쪽 마우스 -> Properties -> Project Facets -> dynamic web module -> 원하는대로 버전 변경
  (Java 1.8로 변경) 

★ src/main/java : 개발하는 Java 코드
★ src/main/resources : 서버가 실행될 때 필요한 파일들의 경로
★ src/test/java: 테스트 전용 경로
★ src/test/resources: 테스트 시에만 사용되는 파일의 경로
★ spring: 스프링 설정 파일의 경로
★ views : JSP 파일 경로
★ pom.xml : Maven 설정 파일

8. pom.xml 수정
(1) 버전 일치 확인
=============================================================================================
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion> 
=============================================================================================
=> <modelVersion>4.0.0</modelVersion>  4.0.0과 위쪽 https://maven.apache.org/maven-v4_0_0.xsd 이부분의 4.0.0 (버전)은 같아야함

(2) 코드 수정
=============================================================================================
<!-- Spring -->
<dependency>
	<groupId>org.springframework</groupId>
	<artifactId>spring-context</artifactId>
	<version>${org.springframework-version}</version>
</dependency>
<dependency>
	<groupId>org.springframework</groupId>
	<artifactId>spring-webmvc</artifactId>
	<version>${org.springframework-version}</version>
</dependency>
<dependency>
	<groupId>org.springframework</groupId>
	<artifactId>spring-test</artifactId>
	<version>${org.springframework-version}</version>
</dependency>
<dependency>
	<groupId>org.springframework</groupId>
	<artifactId>spring-tx</artifactId>
	<version>${org.springframework-version}</version>
</dependency>
<dependency>
	<groupId>org.springframework</groupId>
	<artifactId>spring-jdbc</artifactId>
	<version>${org.springframework-version}</version>
</dependency>
=============================================================================================
=> 
<dependency>
	<groupId>org.springframework</groupId>
	<artifactId>spring-webmvc</artifactId>
	<version>${org.springframework-version}</version>
</dependency> 복사 세번 후, 각각spring-test, spring-tx, spring-jdbc 이름, 내용 바꾸기
=> spring-context, spring-webmvc는 프로젝트 생성 시에 존재하고, spring-test, spring-tx, spring-jdbc는 추가 생성
=> spring-tx, spring-jdbc는 MyBatis 관련 라이브러리를 추가할때 필요하며.
    스프링에서 데이터베이스 처리와 트랜잭션 처리 역할을 함 (해당 라이브러리들은 MyBatis와 무관하게 보이지만 추가하지 않은 경우 에러 발생)

9. 필요한 것 다운로드

★ Google -> mavenrespository -> 홈페이지 들어가기 전, 글자 치는 란에 springjdbc 입력 -> 페이지 클릭 -> 각종 버전들 나옴
★(1)~(14)에 적어놓은 <version>수정도 확인하기 
★ <!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --> 이런 URL 주석은 지워도 상관 없음

 (1) 검색란에 aspectjweaver 검색 -> aspectJ weaver-> 1.9.0 다운로드 (밑에 그냥 클릭하면 소스 자동복사 됨 밑에도 동일)
====================================================
<!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver -->
<dependency>
    <groupId>org.aspectj</groupId>
    <artifactId>aspectjweaver</artifactId>
    <version>${org.aspectj-version}</version>
</dependency>
====================================================

 (2) log4j-core ->  Apache Log4j Core ->2.11.2
 ★<version>은 <version>${org.log4j-version}</version>으로 수정
====================================================
<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
<dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-core</artifactId>
    <version>${org.log4j-version}</version>
</dependency>
====================================================

 (3) log4j-slf4j-impl-> Apache Log4j SLF4J Binding->2.11.2
★<version>은 <version>${org.log4j-version}</version>으로 수정
====================================================
<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j-impl -->
<dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-slf4j-impl</artifactId>
    <version>${org.log4j-version}</version>
    <scope>test</scope>
</dependency>
====================================================

 (4) org.bgee.log4jdbc-log4j2->Log4Jdbc Log4j2 JDBC 4->1.16
★ 버전 수정 없음
====================================================
<!-- https://mvnrepository.com/artifact/org.bgee.log4jdbc-log4j2/log4jdbc-log4j2-jdbc4 -->
<dependency>
    <groupId>org.bgee.log4jdbc-log4j2</groupId>
    <artifactId>log4jdbc-log4j2-jdbc4</artifactId>
    <version>1.16</version>
</dependency>
====================================================
 
<!--DB-->
(5) hikaricp-->HikariCP-> 최신버전 받아도 상관 없음
★ 버전 수정 없음
====================================================
<!-- https://mvnrepository.com/artifact/com.zaxxer/HikariCP -->
<dependency>
    <groupId>com.zaxxer</groupId>
    <artifactId>HikariCP</artifactId>
    <version>3.4.3</version>
</dependency>
====================================================

(6) mybatis-> mybatis->3.4.6
★ 버전 수정 없음
====================================================
<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->
<dependency>
    <groupId>org.mybatis</groupId>
    <artifactId>mybatis</artifactId>
    <version>3.4.6</version>
</dependency>
====================================================

(7) (6)에서 뒤로가기 두번 해서 MyBatis Spring->1.3.2
★ 버전 수정 없음
====================================================
<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring -->
<dependency>
    <groupId>org.mybatis</groupId>
    <artifactId>mybatis-spring</artifactId>
    <version>1.3.2</version>
</dependency>
====================================================

 (8) mysql-connector->MySQL Connector/J->5.대 아무거나
★ 버전 수정 없음
====================================================
<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
<dependency>
    <groupId>mysql</groupId>
    <artifactId>mysql-connector-java</artifactId>
    <version>5.1.49</version>
</dependency>
====================================================

<!-- Util -->
 (9)lombok-> Project Lombok->1.18.10
★ 버전 수정 없음
====================================================
<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
<dependency>
    <groupId>org.projectlombok</groupId>
    <artifactId>lombok</artifactId>
    <version>1.18.10</version>
    <scope>provided</scope>
</dependency>
====================================================

(10) jackson-databind-> Jackson Databind-> 2.10.0
★ <version>은 <version>${fasterxml.jackson-version}</version>으로 수정
====================================================
<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
<dependency>
    <groupId>com.fasterxml.jackson.core</groupId>
    <artifactId>jackson-databind</artifactId>
    <version>${fasterxml.jackson-version}</version>
</dependency>
====================================================

(11)  jackson-dataformat-xml->Jackson Dataformat XML->2.10.0
★ <version>은  <version>${fasterxml.jackson-version}</version>으로 수정
==================================================================
<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-xml -->
<dependency>
    <groupId>com.fasterxml.jackson.dataformat</groupId>
    <artifactId>jackson-dataformat-xml</artifactId>
    <version>${fasterxml.jackson-version}</version>
</dependency>
==================================================================

(12)net.coobird-> Thumbnailator->0.4.8
★ 버전 수정 없음
====================================================
<!-- https://mvnrepository.com/artifact/net.coobird/thumbnailator -->
<dependency>
    <groupId>net.coobird</groupId>
    <artifactId>thumbnailator</artifactId>
    <version>0.4.8</version>
</dependency>
====================================================

<!-- Spring Security -->
(13) spring-security->. Spring Security Core->4.2.11
★ <version>은  <version>${spring.security-version}</version>으로 수정
==============================================================
<!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-core -->
<dependency>
    <groupId>org.springframework.security</groupId>
    <artifactId>spring-security-core</artifactId>
    <version>${spring.security-version}</version>
</dependency>
==============================================================
하고 같은거 세번 복사해서 <artifactId>,<version> 수정
==============================================================
<!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-core -->
<dependency>
    <groupId>org.springframework.security</groupId>
    <artifactId>spring-security-core</artifactId>
    <version>${spring.security-version}</version>
</dependency>

<!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-core -->
<dependency>
    <groupId>org.springframework.security</groupId>
    <artifactId>spring-security-web</artifactId>
    <version>${spring.security-version}</version>
</dependency>

<!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-core -->
<dependency>
    <groupId>org.springframework.security</groupId>
    <artifactId>spring-security-config</artifactId>
    <version>${spring.security-version}</version>
</dependency>

<!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-core -->
<dependency>
    <groupId>org.springframework.security</groupId>
    <artifactId>spring-security-taglibs</artifactId>
    <version>${spring.security-version}</version>
</dependency>
==============================================================

<!-- Schedular -->
(14) org.quartz->Quartz job-> 아무거나 받아도 됨
★ <version>은 <version>${org.quartz-scheduler}</version>으로 수정
====================================================
<!-- https://mvnrepository.com/artifact/org.quartz-scheduler/quartz-jobs -->
<dependency>
    <groupId>org.quartz-scheduler</groupId>
    <artifactId>quartz-jobs</artifactId>
    <version>${org.quartz-scheduler}</version>
</dependency>
====================================================
(15) (14)와 같은거 한번 복사해서 이름 jobs만 지워주기
====================================================
<!-- https://mvnrepository.com/artifact/org.quartz-scheduler/quartz-jobs -->
<dependency>
    <groupId>org.quartz-scheduler</groupId>
    <artifactId>quartz</artifactId>
    <version>${org.quartz-scheduler}</version>
</dependency>
=============================================================================================

★ pom.xml 코드
=================================================================
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>kr.co</groupId>
	<artifactId>myweb</artifactId>
	<name>Spring01</name>
	<packaging>war</packaging>
	<version>1.0.0-BUILD-SNAPSHOT</version>
	<properties>
		<java-version>1.8</java-version>
		<org.springframework-version>4.3.22.RELEASE</org.springframework-version>
		<org.aspectj-version>1.9.5</org.aspectj-version>
		<org.log4j-version>2.11.2</org.log4j-version>
		<org.slf4j-version>1.7.25</org.slf4j-version>
		<spring.security-version>4.2.11.RELEASE</spring.security-version>
		<org.quartz-version>2.3.2</org.quartz-version>
		<fasterxml.jackson-version>2.10.0</fasterxml.jackson-version>
	</properties>
	<dependencies>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>

		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${org.log4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${org.log4j-version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of log4j-core -->
				<exclusion>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.bgee.log4jdbc-log4j2</groupId>
			<artifactId>log4jdbc-log4j2-jdbc4</artifactId>
			<version>1.16</version>
		</dependency>

		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>

		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

		<!-- DB -->
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<version>3.4.2</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.4.6</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.3.2</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.48</version>
		</dependency>

		<!-- Utils -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.10</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${fasterxml.jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
			<version>${fasterxml.jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>net.coobird</groupId>
			<artifactId>thumbnailator</artifactId>
			<version>0.4.8</version>
		</dependency>

		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring.security-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${spring.security-version}</version>
		</dependency>

		<!-- Scheduler -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>${org.quartz-version}</version>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz-jobs</artifactId>
			<version>${org.quartz-version}</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<additionalProjectnatures>
						<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
					</additionalProjectnatures>
					<additionalBuildcommands>
						<buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
					</additionalBuildcommands>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<compilerArgument>-Xlint:all</compilerArgument>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<configuration>
					<mainClass>org.test.int1.Main</mainClass>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
=============================================================================================

10. src/main/resources에서 log4j.xml -> 이름 log4j2.xml로 수정
11. src/main/resources에서 new file -> log4jdbc.log4j2.properties 이름으로 생성
=> log4jdbc.spylogdelegator.name=net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator 코드 넣기

12. src/main/resources에서 other file ->  MybatisConfig.xml 생성 -> 코드 넣기
=====================================
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
</configuration> 
=====================================

13. oracle database 다운로드
https://www.oracle.com/downloads/  -> 페이지 내리다보면 Drivers and Utilities에서 jdbc drivers -> oracle database 18c drivers -> ojdbc8.jar 다운 
 (1) ojdbc8.jar파일 C:\Program Files\Java\jdk1.8.0_251\lib에 넣기 ->  원하는 프로젝트 -> Properties->java build path -> library 
    -> Add Externals Jars ->  C:\Program Files\Java\jdk1.8.0_251\lib경로의 ojdbc6.jar 클릭 -> apply ->regerenced libraries생성됨 -> 그안에 ojdbc8.jar 있음
 (2)원하는 프로젝트 -> Properties -> Deployment Assembly -> Add -> Java Build Path Entries -> objdbc8.jar -> Apply 

14. web.xml 코드 수정
-> </servlet-mapping> 코드 뒤에 붙여넣기
==========================================================================
<filter>
  	<filter-name>encoding</filter-name>
  	<filter-class>org.springframework.web.filter.characterEncodingFilter</filter-class>
  	<init.param>
  		<param-name>encoding</param-name>
  		<param-value>UTF-8</param-value>
  	</init.param>
  </filter>
  <filter-mapping>
  	<filter-name>encoding</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
==========================================================================

15. root-context.xml 수정 --> 수정 시 404에러 (해결하기!)
<원래 코드>
=================================================================================================
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
		
</beans>
=================================================================================================
<수정할 코드>
========================================================================================
xmlns:context="http://www.springframework.org/schema/context"
xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"

xsi:schemaLocation이 부분에
"http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd 
http://www.springframework.org/shema/contenxt http://www.springframework.org/schema/context/spring-context-4.3xsd"

코드 추가하고,
<!-- Root Context: defines shared resources visible to all other web components --> 밑에

	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
			destroy-method="close">
			<property name="driveClassName"
					  value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
			<property name="jdbcUrl"
					  value="jdbc:log4jdbc:oracle:thin:@localhost:1521:XE"></property>
			<property name="username" value="springdb"></property>
			<property name="password" value="springuser"></property>
	</bean>
			
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation"
			value="classpath:/MybatisConfig.xml"></property>
		<property name="mapperLocations"
			value="classpath:mappers/**/*Mapper.xml"></property>
	</bean>
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory"
			ref="sqlSessionFactory"></constructor-arg>
	</bean>
	<context:component-scan
		base-package="com.myweb.persistence" />
	<context:component-scan
		base-package="com.myweb.service" />
			
</beans> 코드 추가
========================================================================================
★ root-context.xml 코드
========================================================================================
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="close">
		<property name="driverClassName"
			value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
		<property name="jdbcUrl"
			value="jdbc:log4jdbc:oracle:thin:@localhost:1521:XE"></property>
		<property name="username" value="springdb"></property>
		<property name="password" value="springuser"></property>
	</bean>
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation"
			value="classpath:/MybatisConfig.xml"></property>
		<property name="mapperLocations"
			value="classpath:mappers/**/*Mapper.xml"></property>
	</bean>
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory"
			ref="sqlSessionFactory"></constructor-arg>
	</bean>
	<context:component-scan
		base-package="com.myweb.persistence" />
	<context:component-scan
		base-package="com.myweb.service" />
</beans>
========================================================================================