#spring-1 기본 웹 페이지 구현

1. DB 생성
   - dbeaver
   
CREATE TABLE str_product(
   PNO NUMBER NULL,
   TITLE varchar2(200) NOT NULL,
   WRITER varchar2(100) NOT NULL,
   CONTENT varchar2(2000) NOT NULL,
   REG8 DATE DEFAULT sysdate,
   MODD8 DATE DEFAULT sysdate,
   READCOUNT NUMBER DEFAULT 0,
   IMGFILE VARCHAR2(2000)
);

ALTER TABLE STR_PRODUCT
ADD CONSTRAINT STR_PRODUCT_PK PRIMARY KEY(PNO)
ENABLE;

CREATE SEQUENCE SEQENCE_PRODUCT INCREMENT BY 1 MINVALUE 0 NOCACHE NOORDER;

★ STS -> src -> _doc 폴더생성 -> lib 폴더생성 ->table.sql 파일 생성 -> 위에 코드 복사 붙여넣기

2. src/main/java 패키지 생성
 - com.myweb.ctrl
 - com.myweb.domain
 - com.myweb.persistence
 - com.myweb.service
 
 (1) com.myweb.domain -> ProductVO(class) 생성
    - VO 역할: 각 계층간 데이터 교환을 위한 자바 객체
============================================================
package com.myweb.domain;

import java.sql.Date;

public class ProductVO {
	private int pno;
	private String title;
	private String writer;
	private String content;
	private Date reg8;
	private Date modd8;
	private int readcount;
	private String imgfile;
	public int getPno() {
		return pno;
	}
}
============================================================
★ 위 코드에서 Alt+shift+s -> Generate getter/setter -> select all -> generate 
============================================================
package com.myweb.domain;

import java.sql.Date;

public class ProductVO {
	private int pno;
	private String title;
	private String writer;
	private String content;
	private Date reg8;
	private Date modd8;
	private int readcount;
	private String imgfile;
	public int getPno() {
		return pno;
	}
	public void setPno(int pno) {
		this.pno = pno;
	}
	public String getTitle() {
		return title;
	}
	public void setTitle(String title) {
		this.title = title;
	}
	public String getWriter() {
		return writer;
	}
	public void setWriter(String writer) {
		this.writer = writer;
	}
	public String getContent() {
		return content;
	}
	public void setContent(String content) {
		this.content = content;
	}
	public Date getReg8() {
		return reg8;
	}
	public void setReg8(Date reg8) {
		this.reg8 = reg8;
	}
	public Date getModd8() {
		return modd8;
	}
	public void setModd8(Date modd8) {
		this.modd8 = modd8;
	}
	public int getReadcount() {
		return readcount;
	}
	public void setReadcount(int readcount) {
		this.readcount = readcount;
	}
	public String getImgfile() {
		return imgfile;
	}
	public void setImgfile(String imgfile) {
		this.imgfile = imgfile;
	}
}

============================================================
 (2) com.myweb.persistence ->ProductDAO(interface) 생성
    - DAO 역할: DB를 사용해 데이터를 조회하거나 조작하는 기능을 전담하도록 만든 객체
============================================================
package com.myweb.persistence;

import java.util.List;
import com.myweb.domain.ProductVO;

public interface ProductDAO {
	public void insert(ProductVO pvo);
	public List<ProductVO> selectList();
	public ProductVO selectOne(Integer pno);
	public void update(ProductVO pvo);
	public void delete(Integer pno);
}
============================================================
 (3) com.myweb.service ->ProductService(interface) 생성
     - Service 역할: DAO가 DB에서 받아온 데이터를 전달받아 가공
============================================================
package com.myweb.service;

import java.util.List;

import com.myweb.domain.ProductVO;

public interface ProductService {
	public void write(ProductVO pvo);
	public List<ProductVO> list();
	public ProductVO detail(Integer pno);
	public void modify(ProductVO pvo);
	public void remove(Integer pno);
}
============================================================

3. src/main/resources -> META-INF
 (1) mappers 폴더 생성 -> ProductMapper.xml 생성
 - google 에서 Mybatis 검색 -> 시작하기 -> 매핑된 SQL 구문 살펴보기( https://mybatis.org/mybatis-3/ko/getting-started.html)에서
================================================
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 코드 복사, 붙여넣기
================================================

4. src/main/resources -> MybatisConfig.xml 생성
★ MybatisConfig.xml에서 아래 코드 입력시, com.myweb.domain.ProductVO 대신 pvo 사용가능 (코드 간편화)
==================================================================
<configuration>
	<typeAliases>
		<!--<package name = "com.myweb.domain" /> -->
		<typeAlias type = " com.myweb.domain.ProductVO" alias="pvo"></typeAlias>
	</typeAliases>
</configuration>
==================================================================
★ MybatisConfig.xml
==================================================================
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<typeAliases>
		<!--<package name = "com.myweb.domain" /> -->
		<typeAlias type = " com.myweb.domain.ProductVO" alias="pvo"></typeAlias>
	</typeAliases>
</configuration> 
==================================================================

5. ProductMapper.xml에서 코드 수정
???????????????????????추후 설명
★ProductMapper.xml에서 아래코드 추가하면
===================
<sql id = "pno_cond">
where pno = #{pno} 
===================
select * from tbl_product 
  		<include refid="pno_cond"/> 이것처럼  <include refid="pno_cond"/>  넣어주면 
select * from tbl_product where pno = #{pno} 이거랑 동일함  지금 코드는 짧지만 조건절 엄청 길어질때 유용
 

★ ProductMapper.xml
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
  <mapper namespace ="ProductMapper">
  <sql id = "pno_cond">
  where pno #{pno}
  </sql> 
  <insert id ="add" parameterType="pvo">
	insert into str_product
  	values(sequence_product.nectval,
  	#{title},
  	#{content},
 	#{writer},
 	sysdate sysdate,
  	sysdate sysdate,
  	0,
  	#{imgfile})
  </insert>
  
  <select id ="List" resultType="pvo">
  	select pno,title,writer,content,modd8,reg8,readcount
  	from str_product order by pno desc
  </select>
  
  <select id ="detail" parameterType="java.lang.Integer" resultType="pvo">
  	select * from str_prdouct
  	<include refid="pno_cond"/>
  </select>
  
  <update id ="modify" parameterType="pvo">
  	update str_product 
  	set title=#{title}, content=#{content}, modd8=sysdate, reg8=sysdate, imgfile=#{imgfile}
  	where pno = #{pno}
  </update>
  
  <delete id = "remove" parameterType="java.lang.Integer">
  	delete from str_product 
  	where pno = #{pno}
  </delete>
  </mapper>


6. (1) com.myweb.persistence 패키지 -> ProductDAOImpl.java. 생성
 - ProductDAO 인터페이스를 구현하는 구현체는 ProductDAOImpl클래스로 작성 
   (2) com.myweb.service 패키지 -> ProductServiceImpl.java 생성
- ProductService 인터페이스를 구현하는 구현체는 ProductServiceImpl클래스로 작성 
  =>implements 두가지 방법
     1) ProductDAOImpl 클래스 생성 시 add에서 ProductDAO 인터페이스 클릭하고 클래스 생성하기
     2) ProductDAOImpl 클래스 생성하고, implements productDAO 코드 넣고, add unimplemented methods 클릭하기

7. ProductDAOImpl 코드 수정
====================================================================
package com.myweb.persistence;

import java.util.List;
import javax.inject.Inject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Repository;
import com.myweb.domain.ProductVO;

@Repository
public class ProductDAOImpl implements ProductDAO {
	private static final Logger log = LoggerFactory.getLogger(ProductDAOImpl.class);
	private static String ns = "ProductMapper."; /*ns = namespace*/
	
	@Inject
	private SqlSession sql;

	@Override 
	public void insert(ProductVO pvo) {
		sql.insert(ns + "add",pvo);

	}

	@Override
	public List<ProductVO> selectList() {
		return sql.selectList(ns+"list");
	}

	@Override
	public ProductVO selectOne(Integer pno) {
		return sql.selectOne(ns + "detail",pno);
	}

	@Override
	public void update(ProductVO pvo) {
		sql.update(ns+"modify", pvo);

	}

	@Override
	public void delete(Integer pno) {
		sql.delete(ns+"remove",pno);

	}
}

====================================================================================

8. ProductServiceImpl 코드 수정
====================================================================================
package com.myweb.service;

import java.util.List;
import javax.inject.Inject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import com.myweb.domain.ProductVO;
import com.myweb.persistence.ProductDAO;

@Service
public class ProductServiceImpl implements ProductService {
	private static final Logger log = LoggerFactory.getLogger(ProductServiceImpl.class);
	
	@Inject
	private ProductDAO pdao;
	

	@Override
	public void write(ProductVO pvo) {
		pdao.insert(pvo);
		
	}

	@Override
	public List<ProductVO> list() {
		return pdao.selectList();
	}

	@Override
	public ProductVO detail(Integer pno) {
		return pdao.selectOne(pno);
	}

	@Override
	public void modify(ProductVO pvo) {
		pdao.update(pvo);
		
	}

	@Override
	public void remove(Integer pno) {
		pdao.delete(pno);
		
	}

}
====================================================================

9. (1)home.jsp 코드 수정
======================================================================
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page langauage="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<jsp:include page="00_header.jsp"></jsp:include>
<jsp:include page="10_nav.jsp"></jsp:include>
<jsp:include page="90_footer.jsp"></jsp:include>
======================================================================
(2) home.jsp 코드 수정
 ★w3School -> Bootstrap4 -> BS4 Jumbotron ->Bootstrap 4 Jumbotron -> Example 코드 복사 붙여넣기
==================================================================================
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page langauage="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<jsp:include page="00_header.jsp"></jsp:include>
<jsp:include page="10_nav.jsp"></jsp:include>
<jsp:include page="90_footer.jsp"></jsp:include>

<div class="jumbotron">
  <h1>Bootstrap Tutorial</h1>
  <p>Bootstrap is the most popular HTML, CSS...</p>
</div>
==================================================================================
※ 위 코드에서 <%@ page langauage="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>코드를
실행 시, ERROR 발생 
그래서 기존의 Home.jsp 코드인 <%@ page session="false" %>를 사용하고 12.부분 파일 생성 후 실행하니 정상적으로 작동 함.
(이유는 추후 설명)
★home.jsp (실제 실행한 코드)
==================================================================================
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page session="false" %>
<jsp:include page="00_header.jsp"></jsp:include>
<jsp:include page="10_nav.jsp"></jsp:include>
<jsp:include page="90_footer.jsp"></jsp:include>

<div class="jumbotron">
  <h1>HYEJIN'S Design Shop</h1>
  <p>Welcome to HYEJIN'S Design Shop</p>
</div>
==================================================================================

10. JUnit 설정
 프로젝트 오른쪽마우스-> properties -> java build path -> libraries -> Add Libraries -> JUnit 선택 -> Apply

11. 버전 변경 (방법 참고)
https://offbyone.tistory.com/16


12. WEN-INF views에 JSP파일 생성
(home.jsp에서
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page langauage="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>코드 상단에 모두 복사 붙여넣기 )
 (1) 00_header.jsp
 (2) 10_nav.jsp
 (3) 90_footer.jsp
 (4) views -> Product폴더생성 -> File로 temp.jsp 생성

# Bootstrap4를 이용해서 코드 복사 붙여넣기 
# w3School -> Bootstrap4를 이용해서 코드 복사 붙여넣기 


(1)00_header.jsp
 Bootstrap4 -> get started -> start template 코드 복사 붙여넣기
 <script src = ~~>부분 세줄 코드 복사 ->  90_footer.jsp에 붙여넣기 (복사한 코드는 지우기)
===================================================================================================
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<!doctype html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">

    <title>HYEJIN'S HomePage</title>
  </head>
  <body>
    <h1>HYEJIN'S Design Shop</h1>
  </body>
</html>
===================================================================================================
 
(2) 10_nav.jsp
 -> w3School -> Bootstrap4 -> BS4Navs -> Nav Menus -> Example 코드 복사 붙여넣기
 -> <h2> 부분은 추후 설명
===================================================================================================
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>

<h2 class="text-center mt-5">Welcome!</h2>

<ul class="nav">
  <li class="nav-item">
    <a class="nav-link" href="#">HOME</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" href="#">PRODUCT</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" href="#">NOTICE</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" href="#">Q&A</a>
  </li>
</ul>
===================================================================================================
★<a class="nav-link"~> 부분에서 <a class="nav-link disabled"~>로 수정하면 홈페이지 구현시 클릭 불가능한 상태로 바뀜

(3) 90_footer.jsp
 ->00_header.jsp 에서 <script scr~> 코드 받아옴
 -> <h6> 부분은 추후 설명
===================================================================================================
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page langauage="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>

    <h6 class="text-center mt-5">
     Copyright 1999-2020 by Hwang Hyejin. All Rights Reserved.
    </h6>

 <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
 <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
 <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
===================================================================================================

(4) temp.jsp
====================================================
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page language="java" contentType="text/html; charset=UTF-8"
  pageEncoding="UTF-8"%>
<jsp:include page="../00_header.jsp"></jsp:include>
<jsp:include page="../10_nav.jsp"></jsp:include>
<jsp:include page="../90_footer.jsp"></jsp:include>
======================================================



